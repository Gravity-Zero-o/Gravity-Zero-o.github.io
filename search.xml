<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2021数模国赛记录</title>
    <url>/2021/08/29/2021%E6%95%B0%E6%A8%A1%E5%9B%BD%E8%B5%9B%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>报名了2021年9月份的数学建模国赛，不过由于疫情原因，延迟了开学，于是就在线上和大家交流</p>
]]></content>
      <categories>
        <category>Story</category>
      </categories>
      <tags>
        <tag>Math</tag>
        <tag>Matlab</tag>
      </tags>
  </entry>
  <entry>
    <title>OSLC适配器开发（踩坑）指南</title>
    <url>/2021/08/29/OSLC%E9%80%82%E9%85%8D%E5%99%A8%E5%BC%80%E5%8F%91%EF%BC%88%E8%B8%A9%E5%9D%91%EF%BC%89%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Technology</category>
      </categories>
      <tags>
        <tag>OSLC</tag>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>写在第一篇</title>
    <url>/2021/08/27/Hello/</url>
    <content><![CDATA[<hr>
<p>​                这是我的第一篇文章，其实也不算是第一篇了，在大一下学期时候，那个寒假连接着暑假的一百多天里，接触到了一些关于网络安全、博客、安卓等方面的内容，也算是刚刚开始，那个时候就在 <em>github+hexo</em> 的模式下写了一个 <em>blog</em>，不过当时感觉没什么可以写的，后来就一直荒废了。</p>
<p>​                但是我又开始了，看到《工程流体力学》的老师自我介绍时候说大家可以去访问他的个人主页，这是一个自己搭建的，感觉很不错，所以我也想，应该把丢下的 <em>blog</em> 捡起来。正好前几个月一直在用 <em>markdown</em> 来写东西，记录金工实习和志愿者等一些事情。</p>
<p>​                嗯，写一些什么呢？</p>
<hr>
<p>​                快开学了，从长空学院离开，写一些回忆录？不过这里市公共网络，不合适吧，但确实要写一下回忆录，记录一下。另外，空气动力学应该写一些，关于小安德森教授写的 <em>《空气动力学基础》</em> 的笔记？也许吧</p>
]]></content>
      <categories>
        <category>Markdown</category>
      </categories>
      <tags>
        <tag>Typora</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenFOAM中的离散</title>
    <url>/2021/08/27/OpenFOAM%E4%B8%AD%E7%9A%84%E7%A6%BB%E6%95%A3/</url>
    <content><![CDATA[<h3 id="1-计算域离散"><a href="#1-计算域离散" class="headerlink" title="1. 计算域离散"></a>1. 计算域离散</h3><p>计算域的离散</p>
<ul>
<li><p>空间离散——网格划分</p>
</li>
<li><p>时间离散——时间步</p>
<p>空间离散之后网格信息储存在 <strong>/constant/polyMesh</strong>,可以从以下几个层次进行描述</p>
<ul>
<li>points ： 点，包含点的坐标向量信息的列表</li>
<li>faces ：面，包含面信息的了表，由点的编号进行定义，即每个面由哪几个点组成 <ul>
<li>boundary faces: 边界面，位于计算域边界的网格面</li>
<li>internal faces : 内部面，除了边界面以外的网格面</li>
</ul>
</li>
<li> cells ：网格单元，包含网格单元信息的列表，由于一个网格面可能同时作为2个组成面，因此将从属关系分为<strong>owner</strong> 和<strong>neighbor</strong> </li>
<li>boundary ：包含边界信息的列表，包括<em>边界类型名</em> 、<em>组别组名</em> 、<em>网格面数量</em> 、<em>起始网格编号</em> </li>
</ul>
</li>
</ul>
<pre class="line-numbers language-none"><code class="language-none">//这是名字为boundary的网格文件
4   //表示4个
(
    rotor  //组别名
    {
        type            wall;  //类型
        inGroups        List&lt;word&gt; 1(wall);
        nFaces          192;   //数量
        startFace       5952;  //起始编号
    }
    stator
    {
        type            wall;
        inGroups        List&lt;word&gt; 1(wall);
        nFaces          192;
        startFace       6144;   //5952+192=6144
    }
    front
    {
        type            empty;
        inGroups        List&lt;word&gt; 1(empty);
        nFaces          3072;
        startFace       6336;   //6144+192=6336
    }
    back
    {
        type            empty;
        inGroups        List&lt;word&gt; 1(empty);
        nFaces          3072;
        startFace       9408;
    }
)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>



<hr>
<ul>
<li><p><strong>polyMesh</strong> 包含了网格的基本信息，openFOAM存储网格不同类型的数据，提供了 <strong>Field</strong> 类，常用的标量 <strong>scalarField</strong> 、矢量 <strong>vectorField</strong> 、张量<strong>tensorField</strong> 和 对称张量<strong>symmTensorField</strong> </p>
</li>
<li><p>在polyMesh基础上，建立了fvMesh类，存储有限体积离散所需要的数据，由此产生了两类：<strong>surface&lt;Field类&gt;</strong> 和 <strong>vol&lt;Field类&gt;</strong> </p>
</li>
<li><p>为了将流场数据存储至网格，openFOAM提供了<strong>geometricField</strong> 类模板</p>
<ul>
<li><p>vol&lt;Field类&gt; ：存储于网格单元中心，在求解器中应用较多</p>
</li>
<li><p>surface&lt;Field类&gt; ：存储于网格面，在边界条件中应用较为广泛</p>
</li>
<li><p>point&lt;Field类&gt; ：存储于网格节点</p>
<hr>
</li>
</ul>
</li>
</ul>
<h3 id="2-方程的空间离散"><a href="#2-方程的空间离散" class="headerlink" title="2. 方程的空间离散"></a>2. 方程的空间离散</h3><h4 id="在上一节中讨论了离散的第一步——计算域的离散，包括时间和空间的离散，揭示了数据的储存问题，本节对方程的离散进行解析"><a href="#在上一节中讨论了离散的第一步——计算域的离散，包括时间和空间的离散，揭示了数据的储存问题，本节对方程的离散进行解析" class="headerlink" title="在上一节中讨论了离散的第一步——计算域的离散，包括时间和空间的离散，揭示了数据的储存问题，本节对方程的离散进行解析"></a>在上一节中讨论了离散的第一步——计算域的离散，包括时间和空间的离散，揭示了数据的储存问题，本节对方程的离散进行解析</h4><p>在CFD中，控制方程的通用形式可写为<br>$$<br>\frac{\partial \rho\phi}{\partial t}+\nabla\cdot(\rho U \phi)-\nabla\cdot(\rho\Gamma_\phi\nabla\phi)=Y_\phi(\phi)<br>$$<br>式中： </p>
<p>在离散时，通常将偏微分方程组离散为如下的代数方程组<br>$$<br>AX=b<br>$$<br>式中：<strong>A</strong>为储存代数方程的系数，采用 fvMatrix 类模板；<strong>x</strong>为变量组成的列向量，<strong>b</strong>为源向量，均采用geometricField类模板。</p>
<p>偏微分方程的每一项均有 <strong>fvm</strong> (<em>finiteVolumeMethod</em>) 以及 <strong>fvc</strong> (<em>finiteVolumeCalculus</em>) 两种离散方式，其中 fvm 隐式计算，返回系数矩阵 fvMatrix 类，而 fvc 显式计算，返回geometricField 类，偏微分方程各项均可用 fvm 或 fvc 的形式进行离散，其格式为“ fvm::”和“ fvc::”</p>
<p><em>张量运算和不同项的代码表示方法在《openFOAM编程指南》第一章有详细的介绍</em></p>
<hr>
<p>有限体积法将计算域划分为网格单元，即控制体。在单个控制体内，等式两边同时对控制体体积和时间进行积分<br>$$<br>\int_t^{t+\Delta t}[\frac{\partial}{\partial t}\int_V\rho\phi dV+\int_V\nabla\cdot(\rho U\phi)dV-\int_V\nabla\cdot(\rho\Gamma_\phi\nabla\phi)dV]dt=\int_t^{t+\Delta t}(\int_VY_\phi(\phi)dV)dt<br>$$</p>
]]></content>
      <categories>
        <category>CFD</category>
      </categories>
      <tags>
        <tag>OpenFOAM</tag>
      </tags>
  </entry>
</search>
